// import Head from "next/head";

// import { reducer, StateProvider } from "../../state";
// import Experiment from "@/components/Experiment";

import { InferGetServerSidePropsType } from "next";
import { GetServerSideProps } from "next";
import { prisma } from "@/database";
import { Session } from "@prisma/client";

import { Table, Container } from "@mantine/core";

export default function Home({
	data,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
	// console.log(data)

	// <a href={"./"+session.id} key={session.id}>
	// </a>
	const rows = data.map((session) => (
		<tr key={session.id}>
			<td>{session.name}</td>
			<td>{session.start_time.toString()}</td>
		</tr>
	));

	return (
		<Container size="lg" px="md">
			{/* <Head>
				<title>Ekonomi Deneyi</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head> */}
			<Table>
				<thead>
					<tr>
						<th>Oturum adı</th>
						<th>Oturum zamanı</th>
					</tr>
				</thead>
				<tbody>{rows}</tbody>
			</Table>
		</Container>
	);
}

export const getServerSideProps: GetServerSideProps<{
	data: Session[];
}> = async () => {
	let allSessions = (await prisma.session.findMany()) as Session[];
	allSessions = allSessions.map((a) => ({
		...a,
		start_time: JSON.parse(JSON.stringify(a?.start_time)),
		end_time: JSON.parse(JSON.stringify(a?.end_time)),
	}));
	// sessionData.start_time = JSON.parse(
	// 	JSON.stringify(sessionData?.start_time)
	// );
	// sessionData.end_time = JSON.parse(JSON.stringify(sessionData?.end_time));
	// console.log(sessionData)

	return {
		props: {
			data: allSessions as Session[],
		},
	};
};
